# this is an auto generated file. This will be overwritten

query GetKnowYourDay($id: ID!) {
  getKnowYourDay(id: $id) {
    id
    userId
    healthCount
    productivityCount
    moodCount
    createdAt
    updatedAt
    date
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListKnowYourDays(
  $filter: ModelKnowYourDayFilterInput
  $limit: Int
  $nextToken: String
) {
  listKnowYourDays(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userId
      healthCount
      productivityCount
      moodCount
      createdAt
      updatedAt
      date
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncKnowYourDays(
  $filter: ModelKnowYourDayFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncKnowYourDays(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userId
      healthCount
      productivityCount
      moodCount
      createdAt
      updatedAt
      date
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetTasks($id: ID!) {
  getTasks(id: $id) {
    id
    title
    userId
    emailOrPhone
    description
    date
    time
    reminder
    repeatType
    isImportant
    createdAt
    updatedAt
    repeatDays
    isCompleted
    taskType
    listGroupId
    customTime
    repeatCount
    endDate
    notiRequestCode
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListTasks(
  $filter: ModelTasksFilterInput
  $limit: Int
  $nextToken: String
) {
  listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      title
      userId
      emailOrPhone
      description
      date
      time
      reminder
      repeatType
      isImportant
      createdAt
      updatedAt
      repeatDays
      isCompleted
      taskType
      listGroupId
      customTime
      repeatCount
      endDate
      notiRequestCode
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncTasks(
  $filter: ModelTasksFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTasks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      userId
      emailOrPhone
      description
      date
      time
      reminder
      repeatType
      isImportant
      createdAt
      updatedAt
      repeatDays
      isCompleted
      taskType
      listGroupId
      customTime
      repeatCount
      endDate
      notiRequestCode
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetListGroup($id: ID!) {
  getListGroup(id: $id) {
    id
    name
    createdAt
    updatedAt
    userId
    title
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListListGroups(
  $filter: ModelListGroupFilterInput
  $limit: Int
  $nextToken: String
) {
  listListGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      createdAt
      updatedAt
      userId
      title
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncListGroups(
  $filter: ModelListGroupFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncListGroups(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      createdAt
      updatedAt
      userId
      title
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetWaterInTake($id: ID!) {
  getWaterInTake(id: $id) {
    id
    date
    count
    userId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListWaterInTakes(
  $filter: ModelWaterInTakeFilterInput
  $limit: Int
  $nextToken: String
) {
  listWaterInTakes(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      date
      count
      userId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncWaterInTakes(
  $filter: ModelWaterInTakeFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWaterInTakes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      date
      count
      userId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    name
    email
    picUrl
    isSocialLoggedIn
    isSubscriptionPurchased
    subscriptionType
    userId
    isNotificationEnabled
    isReminderEnabled
    isEmailVerified
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      email
      picUrl
      isSocialLoggedIn
      isSubscriptionPurchased
      subscriptionType
      userId
      isNotificationEnabled
      isReminderEnabled
      isEmailVerified
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      email
      picUrl
      isSocialLoggedIn
      isSubscriptionPurchased
      subscriptionType
      userId
      isNotificationEnabled
      isReminderEnabled
      isEmailVerified
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}
